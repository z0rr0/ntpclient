package main

import (
	"flag"
	"fmt"
	"os"
	"strings"
	"sync"
	"time"

	"github.com/z0rr0/ntpclient"
)

func main() {
	var wg sync.WaitGroup
	host := flag.String("h", "", "NTP server (or comma separated servers)")
	port := flag.Uint("p", 123, "NTP port")
	version := flag.Uint("v", 4, "NTP version")
	timeout := flag.Uint64("t", 5, "NTP timeout [sec.]")

	flag.Parse()
	if *host == "" {
		fmt.Println("Invalid parameters")
		flag.PrintDefaults()
		os.Exit(1)
		return
	}
	d := time.Duration(*timeout) * time.Second
	servers := strings.Split(*host, ",")
	result := make([]ntpclient.Response, len(servers))
	for i := range servers {
		wg.Add(1)
		go func(j int) {
			defer wg.Done()
			r := ntpclient.Request{
				Host:    servers[j],
				Port:    *port,
				Version: *version,
				Timeout: d,
			}
			result[j] = ntpclient.ExtClient(r)
		}(i)
	}
	wg.Wait()
	fmt.Printf("Local: %v %v\n", time.Now(), len(result))
	for i := range result {
		if result[i].Err != nil {
			fmt.Printf("%v: error\n\t%v\n", servers[i], result[i].Err)
		} else {
			fmt.Printf("%v [%v; %v]: %v\n", servers[i], result[i].Statum, result[i].Diff, result[i].R)
		}
	}
}
